{"ast":null,"code":"// import { LoginAction } from \"../action/LoginAction\"\n// import { Action } from \"@remix-run/router\";\n// import { Navigate } from \"react-router-dom\";\n// import { type } from \"@testing-library/user-event/dist/type\";\n// import { useNavigate } from \"react-router-dom\";\nimport { remove_user, users } from \"../contanst\";\n\n// import state from \"sweetalert/typings/modules/state\";\n\nconst initialevalue = {\n  // isvalid: false ,\n  isvalid: localStorage.getItem(\"email\")\n  // && localStorage.getItem(\"password\")\n};\n// const navigate = useNavigate();\nconst userData = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialevalue;\n  let LoginAction = arguments.length > 1 ? arguments[1] : undefined;\n  switch (LoginAction.type) {\n    case users:\n      return {\n        ...state,\n        isvalid: LoginAction.data\n      };\n    case remove_user:\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"password\");\n      type: return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\nexport default userData;","map":{"version":3,"names":["remove_user","users","initialevalue","isvalid","localStorage","getItem","userData","state","LoginAction","type","data","removeItem"],"sources":["/home/prydan/Drashti/React/redux-counter/src/redux/reducer/LoginReducer.js"],"sourcesContent":["// import { LoginAction } from \"../action/LoginAction\"\n// import { Action } from \"@remix-run/router\";\n// import { Navigate } from \"react-router-dom\";\n// import { type } from \"@testing-library/user-event/dist/type\";\n// import { useNavigate } from \"react-router-dom\";\nimport { remove_user, users } from \"../contanst\";\n\n// import state from \"sweetalert/typings/modules/state\";\n\nconst initialevalue = {\n  // isvalid: false ,\n  isvalid: localStorage.getItem(\"email\"),\n  // && localStorage.getItem(\"password\")\n};\n// const navigate = useNavigate();\nconst userData = (state = initialevalue, LoginAction) => {\n  switch (LoginAction.type) {\n    case users:\n      return { ...state, isvalid: LoginAction.data };\n\n    case remove_user:\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"password\");\n      type:\n      return {...state}\n    default:\n      return state;\n  }\n};\n\nexport default userData;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAW,EAAEC,KAAK,QAAQ,aAAa;;AAEhD;;AAEA,MAAMC,aAAa,GAAG;EACpB;EACAC,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;EACrC;AACF,CAAC;AACD;AACA,MAAMC,QAAQ,GAAG,YAAwC;EAAA,IAAvCC,KAAK,uEAAGL,aAAa;EAAA,IAAEM,WAAW;EAClD,QAAQA,WAAW,CAACC,IAAI;IACtB,KAAKR,KAAK;MACR,OAAO;QAAE,GAAGM,KAAK;QAAEJ,OAAO,EAAEK,WAAW,CAACE;MAAK,CAAC;IAEhD,KAAKV,WAAW;MACdI,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChCP,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;MACnCF,IAAI,EACJ,OAAO;QAAC,GAAGF;MAAK,CAAC;IACnB;MACE,OAAOA,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}